{"version":3,"sources":["logo.svg","PubSub.js","CommitsPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","onOpenResolve","subscribeObject","onOpenPromise","Promise","resolve","client","Client","window","ping_start_times","setInterval","msg_id","ping","Date","method","args","response","_","forEach","subscriber","console","log","ClientInstance","CommitsPage","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","inherits","createClass","key","value","then","react_default","a","createElement","className","Component","App","connectionLost","modalIsOpen","secondModalIsOpen","handleClickOpen","setState","handleClose","shutdown","handleCloseCancel","handleSecondClose","checkConnectionTimerId","callback","_this2","_ref","clearTimeout","setTimeout","ping_time","push","classes","props","AppBar_default","position","header","Toolbar_default","Drawer_default","drawer","variant","paper","drawerPaper","anchor","toolbar","Divider_default","List_default","ListItem_default","button","ListItemText_default","primary","onClick","Link","to","Switch","Route","path","component","Dialog_default","open","onClose","aria-labelledby","aria-describedby","DialogTitle_default","id","DialogContent_default","DialogContentText_default","DialogActions_default","Button_default","color","autoFocus","withStyles","theme","root","display","appBar","width","marginLeft","height","flexDirection","alignItems","justifyContent","flexShrink","mixins","content","flexGrow","backgroundColor","palette","background","default","padding","spacing","unit","Boolean","location","hostname","match","ReactDOM","render","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b3c2d085.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","/* eslint-disable */\r\nimport _ from 'lodash';\r\n\r\nconst subscribeObject = {};\r\nexport const subscribe = (method, callback) => {\r\n  if (!subscribeObject[method]) {\r\n    subscribeObject[method] = []\r\n  }\r\n  subscribeObject[method].push(callback)\r\n}\r\nlet onOpenResolve;\r\nexport const onOpenPromise = new Promise ((resolve) => {\r\n  onOpenResolve = resolve;\r\n})\r\n\r\nexport const client = new Client(\"35.176.145.209\", () => {\r\n    onOpenResolve();\r\n    window.ping_start_times = [];\r\n    window.setInterval(function(){\r\n        var msg_id = client.ping();\r\n        window.ping_start_times[msg_id] = new Date();\r\n    }, 500);\r\n}, (msg_id, method, args, response) => {\r\n    // if(method == \"ping\" && msg_id in ping_start_times) {\r\n    //     clearTimeout(checkConnection)\r\n    //     checkConnection = setTimeout(() => {this.setState({\r\n    //       connectionLost: true\r\n    //     })}, 1000)\r\n    //     var ping_time = new Date() - ping_start_times[msg_id];\r\n    //     this.setState({\r\n    //       ping: ping_time\r\n    //     })\r\n    //     delete ping_start_times[msg_id];\r\n    //\r\n    // } else {\r\n    //     console.log(\"Response\", msg_id, method, args, response);\r\n    // }\r\n\r\n    _.forEach(subscribeObject[method], subscriber => {\r\n      subscriber({msg_id, method, args, response})\r\n    })\r\n\r\n    console.log(\"Response\", msg_id, method, args, response);\r\n\r\n\r\n})\r\n\r\n window.ClientInstance = client // For easy testing in dev tools\r\n","import React, { Component } from 'react';\r\nimport {subscribe, client, onOpenPromise} from './PubSub';\r\n\r\nexport class CommitsPage extends Component {\r\n\r\n  state = {\r\n\r\n  }\r\n\r\n\r\n  componentDidMount(){\r\n    onOpenPromise.then(() => {\r\n      // client.get_dcommitsets();\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        hello\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default (CommitsPage);\r\n","import React, { Component } from 'react';\nimport { Switch, Route, Link } from 'react-router-dom';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport { withStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\nimport logo from './logo.svg';\nimport CommitsPage from './CommitsPage';\nimport './App.css';\nimport {subscribe, client} from './PubSub';\n/* eslint-disable */\n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n  },\n  header: {\n      width: `calc(100% - 240px)`,\n      height: 65,\n      display: 'flex',\n      flexDirection: 'row',\n      alignItems: 'flex-end',\n      justifyContent: 'space-between',\n      marginLeft: 240\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  toolbar: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.default,\n    padding: theme.spacing.unit * 3,\n  },\n});\n\nclass App extends Component {\n\n  state = {\n    ping: \"??\",\n    connectionLost: false,\n    modalIsOpen: false,\n    secondModalIsOpen: false\n  }\n\n  handleClickOpen = () => {\n    this.setState({ modalIsOpen: true });\n  };\n\n  handleClose = () => {\n    this.setState({ modalIsOpen: false,  secondModalIsOpen: true});\n    client.shutdown()\n  };\n\n  handleCloseCancel = () => {\n    this.setState({ modalIsOpen: false});\n  };\n\n  handleSecondClose = () => {\n    this.setState({ secondModalIsOpen: false });\n  };\n\n  componentDidMount(){\n\n\n      //const ClientClass = window.Client;\n      // eslint-disable-next-line\n\n    let checkConnectionTimerId;\n\n    subscribe('ping' , (({msg_id, method, args, response}) => {\n      if(msg_id in window.ping_start_times) {\n          clearTimeout(checkConnectionTimerId)\n          checkConnectionTimerId = setTimeout(() => {this.setState({\n            connectionLost: true\n          })}, 1000)\n          var ping_time = new Date() - ping_start_times[msg_id];\n          this.setState({\n            ping: ping_time\n          })\n          delete ping_start_times[msg_id];\n\n      }\n    }))\n\n  }\n\n  render() {\n   const { classes } = this.props;\n    return (\n      <div className=\"App\">\n        <AppBar position=\"static\" className={classes.header}>\n          <Toolbar className=\"header-toolbar\">\n            <div className=\"Logo\">Dagger4</div>\n            <div className=\"connection-info\">\n              <div className={this.state.connectionLost ? \"connection-lost\" : \"connection-lost hidden\"}>connection lost</div>\n              <div className=\"Ping\">Ping: {this.state.ping}ms</div>\n            </div>\n          </Toolbar>\n        </AppBar>\n        <Drawer\n          className={classes.drawer}\n          variant=\"permanent\"\n          classes={{\n            paper: classes.drawerPaper\n          }}\n          anchor=\"left\"\n        >\n        <div className={classes.toolbar} />\n        <Divider />\n        <List>\n          <ListItem button key='Restart Server'>\n            <ListItemText primary='Restart Server' onClick={this.handleClickOpen} />\n          </ListItem>\n          <ListItem button key='Commits'>\n          <Link to={'/commit-page'}><ListItemText primary='Commits' /></Link>\n          </ListItem>\n          <ListItem button key='Workers'>\n            <ListItemText primary='Workers' />\n          </ListItem>\n          <ListItem button key='Nodes'>\n            <ListItemText primary='Nodes'/>\n          </ListItem>\n        </List>\n        <Divider />\n      </Drawer>\n      <div className=\"main-content\">\n      <Switch>\n\n        <Route path='/commit-page' component={CommitsPage}/>\n\n      </Switch>\n      </div>\n      <Dialog\n          open={this.state.modalIsOpen}\n          onClose={this.handleClose}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">{\"Alert!\"}</DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">\n              Are you sure you want to restart the server?\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleCloseCancel} color=\"primary\">\n              Cancel\n            </Button>\n            <Button onClick={this.handleClose} color=\"primary\" autoFocus>\n              OK\n            </Button>\n          </DialogActions>\n        </Dialog>\n        <Dialog\n            open={this.state.secondModalIsOpen}\n            onClose={this.handleSecondClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle id=\"alert-dialog-title\">{\"No probs!\"}</DialogTitle>\n            <DialogContent>\n              <DialogContentText id=\"alert-dialog-description\">\n                Please wait a few seconds and refresh this page\n              </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={this.handleSecondClose} color=\"primary\" autoFocus>\n                OK\n              </Button>\n            </DialogActions>\n          </Dialog>\n\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render((\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>  \n), document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}